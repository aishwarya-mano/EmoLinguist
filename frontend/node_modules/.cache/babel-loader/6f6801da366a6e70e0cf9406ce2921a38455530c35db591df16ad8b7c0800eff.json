{"ast":null,"code":"var _jsxFileName = \"/Users/aishwarya/Documents/SJSU/projects/python_projects/sentiment_analysis/sentiment-analysis-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [analysis, setAnalysis] = useState('');\n  const analyzeSentiment = async () => {\n    const response = await fetch('http://127.0.0.1:5000/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    if (response.ok) {\n      const result = await response.json();\n      setAnalysis(result);\n    } else {\n      alert('Failed to analyze sentiment. Please check if the Flask server is running.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sentiment Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type or paste text here...\",\n        rows: \"4\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: analyzeSentiment,\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Polarity: \", analysis.polarity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Subjectivity: \", analysis.subjectivity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sentiment: \", analysis.sentiment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TiAHiFoPKN6GCpaZdH31dvGLnnw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","App","_s","text","setText","analysis","setAnalysis","analyzeSentiment","response","fetch","method","headers","body","JSON","stringify","ok","result","json","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","cols","onClick","polarity","subjectivity","sentiment","_c","$RefreshReg$"],"sources":["/Users/aishwarya/Documents/SJSU/projects/python_projects/sentiment_analysis/sentiment-analysis-frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [analysis, setAnalysis] = useState('');\n\n  const analyzeSentiment = async () => {\n    const response = await fetch('http://127.0.0.1:5000/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text }),\n\n    });\n    if (response.ok) {\n      const result = await response.json();\n      setAnalysis(result);\n\n    }\n    else {\n      alert('Failed to analyze sentiment. Please check if the Flask server is running.');\n    }\n\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Sentiment Analysis</h1>\n        <textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Type or paste text here...\"\n          rows=\"4\"\n          cols=\"50\"\n        />\n        <button onClick={analyzeSentiment}>Analyze</button>\n\n        {analysis && (\n          <div>\n            <p>Polarity: {analysis.polarity}</p>\n            <p>Subjectivity: {analysis.subjectivity}</p>\n            <p>Sentiment: {analysis.sentiment}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX;MAAK,CAAC;IAE/B,CAAC,CAAC;IACF,IAAIK,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpCX,WAAW,CAACU,MAAM,CAAC;IAErB,CAAC,MACI;MACHE,KAAK,CAAC,2EAA2E,CAAC;IACpF;EAEF,CAAC;EACD,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBpB,OAAA;MAAQmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BpB,OAAA;QAAAoB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BxB,OAAA;QACEyB,KAAK,EAAEtB,IAAK;QACZuB,QAAQ,EAAGC,CAAC,IAAKvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACzCI,WAAW,EAAC,4BAA4B;QACxCC,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFxB,OAAA;QAAQgC,OAAO,EAAEzB,gBAAiB;QAAAa,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAElDnB,QAAQ,iBACPL,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,GAAG,YAAU,EAACf,QAAQ,CAAC4B,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCxB,OAAA;UAAAoB,QAAA,GAAG,gBAAc,EAACf,QAAQ,CAAC6B,YAAY;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CxB,OAAA;UAAAoB,QAAA,GAAG,aAAW,EAACf,QAAQ,CAAC8B,SAAS;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CA9CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}